/**
 * recover.c
 *
 * Computer Science 50
 * Problem Set 5
 *
 * Recovers JPEGs from a forensic image.
 */

#include <stdio.h>
#include <stdlib.h>

void makeimage(int i, FILE* file, char* buffer, char* title);

int main(int argc, char* argv[])
{
  if(argc!= 1)
    {
      return 0;
    }
  FILE* file = fopen("card.raw", "r");
  if(file == NULL)
    {
      printf("Could not open card.raw");
      return 1;
    }
  char buffer[512];
  char* title = malloc(sizeof(char)*7);
  int a = 0;
  int i = 0;
do
  {

    a = fread(&buffer, sizeof(char), 512, file);
    if(buffer[0]==(char)255 && buffer[1]==(char)216 && buffer[2]==(char)255 && (buffer[3]==(char) 224 || buffer[3]==(char)225))
      {
	i++;
        fseek(file, -512, SEEK_CUR);
        makeimage(i, file, buffer, title);	
      }


  }
 while(a==512);
 fclose(file);

}

void makeimage(int i, FILE* file, char* buffer, char* title)
{
  int a=0;
  int counter = 0;
  sprintf(title, "%03d.jpg", i);
  FILE* newimg = fopen(title, "a");
  if (newimg == NULL)
    {
      printf("Could not open newimg");
      return 3;
    }
  do
   {  
      counter++;
      a = fread(buffer, sizeof(char), 512, file);
      fwrite(buffer, sizeof(char), 512, newimg); 
   }
  while((counter == 1) ||( (a == 512) && (buffer[0]!=(char)255 || buffer[1]!=(char)216 || buffer[2]!=(char)255 || (buffer[3]!=(char) 224 && buffer[3]!=(char)225))));
  fseek(file, -512, SEEK_CUR);
  fclose(newimg);
}
    
